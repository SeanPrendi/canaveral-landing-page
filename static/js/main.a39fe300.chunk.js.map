{"version":3,"sources":["assets/canaveral-logo.png","assets/github-logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","theme","createMuiTheme","shadows","useStyles","makeStyles","root","width","backgroundColor","palette","background","paper","list","borderColor","borderWidth","dropdownHeaderText","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","color","dropdownText","getWindowDimensions","window","innerWidth","height","innerHeight","App","React","useState","expanded","setExpanded","handleChange","panel","event","isExpanded","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","useWindowDimensions","classes","desktop","ThemeProvider","className","src","canaveral_logo","alt","style","paddingTop","flexDirection","padding","href","github_logo","Typography","ExpansionPanel","onChange","ExpansionPanelSummary","expandIcon","ChevronRight","ExpansionPanelDetails","paddingLeft","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a39fe300.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/canaveral-logo.7c4b4684.png\";","module.exports = __webpack_public_path__ + \"static/media/github-logo.76d344f0.svg\";","import React, { useState, useEffect } from \"react\";\nimport canaveral_logo from \"./assets/canaveral-logo.png\";\nimport github_logo from \"./assets/github-logo.svg\";\nimport {\n  ExpansionPanel,\n  ExpansionPanelSummary,\n  ExpansionPanelDetails\n} from \"@material-ui/core\";\nimport {\n  makeStyles,\n  createMuiTheme,\n  ThemeProvider\n} from \"@material-ui/core/styles\";\nimport { ChevronRight } from \"@material-ui/icons\";\nimport { Typography } from \"@material-ui/core\";\nimport \"./App.css\";\n\nconst theme = createMuiTheme({\n  shadows: [\"none\"]\n});\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    backgroundColor: theme.palette.background.paper,\n    shadows: [\"none\"]\n  },\n  list: {\n    borderColor: \"#a46ddb !important\",\n    borderWidth: 1\n  },\n  dropdownHeaderText: {\n    fontSize: theme.typography.pxToRem(18),\n    fontWeight: theme.typography.fontWeightRegular,\n    color: \"#878787\"\n  },\n  dropdownText: {\n    fontSize: theme.typography.pxToRem(14),\n    fontWeight: theme.typography.fontWeightRegular,\n    color: \"#878787\"\n  }\n}));\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height\n  };\n}\n\nfunction useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n\nfunction App() {\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleChange = (panel) => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n  const { height, width } = useWindowDimensions();\n  const classes = useStyles();\n  const desktop = height*0.75 < width;\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"App\">\n        {/* Quick Install */}\n        <header className=\"App-header\">\n          <img\n            src={canaveral_logo}\n            className=\"App-logo\"\n            alt=\"canaveral-logo\"\n            style={{ paddingTop: desktop ? \"\" : \"5vh\" }}\n          />\n          <div\n            className=\"Body-content\"\n            style={{ flexDirection: desktop ? \"\" : \"column\" }}\n          >\n            <div className=\"Quick-install-container\">\n              <div className=\"Quick-install-header\">\n                <div className=\"Title-text\">Quick Install:</div>\n                Homebrew\n              </div>\n              <div\n                className=\"Install-box\"\n                style={{ width: desktop ? \"\" : \"80vw\" }}\n              >\n                <div\n                  className=\"Install-box-inner-container\"\n                  style={{ width: desktop ? \"\" : \"80vw\" }}\n                >\n                  <div className=\"Install-box-text-container\">\n                    <div className=\"Install-box-dollar-sign\">$&nbsp;</div>\n                    <div className=\"Install-box-text\">\n                      brew tap jchengjr77/homebrew-private\n                      https://github.com/jchengjr77/homebrew-private.git\n                    </div>\n                  </div>\n                  <div className=\"Install-box-text-container\">\n                    <div className=\"Install-box-dollar-sign\">$&nbsp;</div>\n                    <div className=\"Install-box-text\">\n                      brew install canaveral\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"Quick-install-method-spacing\" />\n              <div className=\"Quick-install-header\">Go Modules</div>\n              <div\n                className=\"Install-box\"\n                style={{ width: desktop ? \"\" : \"80vw\" }}\n              >\n                <div\n                  className=\"Install-box-inner-container\"\n                  style={{ width: desktop ? \"\" : \"80vw\" }}\n                >\n                  <div className=\"Install-box-text-container\">\n                    <div className=\"Install-box-dollar-sign\">$&nbsp;</div>\n                    <div className=\"Install-box-text\">\n                      go get github.com/jchengjr77/canaveral\n                    </div>\n                  </div>\n                  <div className=\"Install-box-text-container\">\n                    <div className=\"Install-box-dollar-sign\">$&nbsp;</div>\n                    <div className=\"Install-box-text\">\n                      go install github.com/jchengjr77/canaveral\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            {/* Separating Bar */}\n            {desktop && <div className=\"Vertical-bar\" />}\n            {!desktop && (\n              <div>\n                <div style={{ padding: \"3vmin\" }} />\n                <div className=\"Horizontal-bar\" />\n                <div style={{ padding: \"3vmin\" }} />\n              </div>\n            )}\n            {/* Explore */}\n            <div className=\"Info-container\">\n              <div>\n                Explore:\n                <div className=\"Github-container\">\n                  {desktop && (\n                    <a href=\"https://github.com/jchengjr77/canaveral\">\n                      <img\n                        src={github_logo}\n                        className=\"Github-logo\"\n                        alt=\"canaveral-logo\"\n                      />\n                    </a>\n                  )}\n                  <a\n                    className=\"Github-link\"\n                    href={\"https://github.com/jchengjr77/canaveral\"}\n                  >\n                    <Typography className={classes.dropdownHeaderText} style={{fontSize: desktop ? \"\" : \"5vmin\"}}>\n                      Github.com/jchengjr77/canaveral\n                    </Typography>\n                  </a>\n                </div>\n              </div>\n              <div className=\"Right-entity-spacing\" />\n              <div>\n                FAQ:\n                <div\n                  className={classes.root}\n                  style={{ width: desktop ? \"\" : \"80vw\" }}\n                >\n                  <ExpansionPanel expanded={expanded === 'panel1'} onChange={handleChange('panel1')}>\n                    <ExpansionPanelSummary expandIcon={<ChevronRight />}>\n                      <Typography className={classes.dropdownHeaderText}>\n                        What is Canaveral?\n                      </Typography>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails>\n                      <Typography className={classes.dropdownText}>\n                        Canaveral is a Command Line Interface (CLI) tool that\n                        can add, remove, and view your projects. It is a tool\n                        built by developers for developers. Don't worry about\n                        where your projects are located, how they are organized,\n                        what their names are, or how to set them up. Canaveral\n                        does that for you.\n                      </Typography>\n                    </ExpansionPanelDetails>\n                  </ExpansionPanel>\n                  <ExpansionPanel expanded={expanded === 'panel2'} onChange={handleChange('panel2')}>\n                    <ExpansionPanelSummary expandIcon={<ChevronRight />}>\n                      <Typography className={classes.dropdownHeaderText}>\n                        Who is it for?\n                      </Typography>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails>\n                      <Typography className={classes.dropdownText}>\n                        Canaveral is for anyone who doesn't want to deal with\n                        setting up projects, ensuring that projects are created\n                        the same way every time, or making sure all of their\n                        projects are in the same place. In short, Canaveral is\n                        for developers everywhere.\n                      </Typography>\n                    </ExpansionPanelDetails>\n                  </ExpansionPanel>\n                  <ExpansionPanel expanded={expanded === 'panel3'} onChange={handleChange('panel3')}>\n                    <ExpansionPanelSummary expandIcon={<ChevronRight />}>\n                      <Typography className={classes.dropdownHeaderText}>\n                        How do I use it?\n                      </Typography>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails>\n                      <Typography className={classes.dropdownText}>\n                        Install Canaveral through either of the methods listed\n                        under Quick Install. For more details, click the Github\n                        link above to see our project repo and documentation!\n                      </Typography>\n                    </ExpansionPanelDetails>\n                  </ExpansionPanel>\n                </div>\n                <div style={{ padding: \"1vh\" }} />\n                <div style={{ width: desktop ? \"\" : \"80vw\" }}>\n                  Creators and Contributors\n                  <div className=\"Creators-contributors-text\">\n                    <a href={\"https://github.com/jchengjr77\"}>\n                      <Typography className={classes.dropdownHeaderText}>\n                        JJ Cheng\n                      </Typography>\n                    </a>\n                    &nbsp;\n                    <Typography className={classes.dropdownHeaderText}>\n                      and\n                    </Typography>\n                    &nbsp;\n                    <a href={\"https://github.com/SeanPrendi\"}>\n                      <Typography className={classes.dropdownHeaderText}>\n                        Sean Prendi\n                      </Typography>\n                    </a>\n                  </div>\n                  <div style={{ paddingLeft: \"1vw\", paddingTop: \"1vh\" }}>\n                    <a\n                      href={\n                        \"https://github.com/jchengjr77/canaveral/#contributing\"\n                      }\n                    >\n                      <Typography className={classes.dropdownText}>\n                        Interested in helping out?\n                      </Typography>\n                    </a>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div style={{ paddingTop: desktop ? \"\" : \"5vh\" }} />\n        </header>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}